"""
Django settings for DjangoBlogProjekt project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^*icy#x#u^gl6cg@5qn$!)hek@d9bnzapfldva+)u+ogspa*a!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # DjangoBlogApp bekanntgeben
    'DjangoBlogApp.apps.DjangoblogappConfig',
    # BootStrap5 bekanntgeben für die HtML Templates
    "crispy_bootstrap5",
    "crispy_forms",
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoBlogProjekt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoBlogProjekt.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {  
    'default': {  
        'ENGINE': 'django.db.backends.mysql',  
        # ### AH
        # Praxis it-leicht-gemacht.de
        # ###
        'NAME': 'itlg_django_blog',
        'USER': 'admin.db.itlg.de',  
        'PASSWORD': '!ch8!nITLGAdm!n!', 
         
        # 'HOST': '85.215.58.208',  
        'HOST': 'it-leicht-gemacht.de',  
        'PORT': '3306',  
        
        # ### AH
        # Entwicklungsumgebung WSL
        # ###
        # 'NAME': 'DjangoBlog',  
        # 'USER': 'AdminDjangoBlog',  
        # 'PASSWORD': 'Tester12345#',  
        # 'HOST': 'localhost',  
        # 'PORT': '33061',  
        'OPTIONS': {  
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"  
        }  
    }  
}  

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'de-DE'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

# crispy Forms
USE_L10N = True
# ###

USE_TZ = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ### AH
# Pfad definieren wo static Dateien wie z. B. Bilder, css zu finden sind
# ###
STATICFILES_DIRS = [
    BASE_DIR / "static"
]

# ### AH
# sagt aus wo die Bilder zu den Artikeln geladen werden sollen
# muss auch in der urls.py definiert werden
# ### 

MEDIA_URL = "/bilder/"

# ### AH
# sagt aus wo die Bilder zu den Artikeln beim ändern im ADMIN Panel hingespreichert werden sollen
# ### 
MEDIA_ROOT = BASE_DIR / "static/bilder"

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


# ### AH 
# Tiny
TINYMCE_JS_URL = "/static/tinymce_6.8.3_dev/tinymce/js/tinymce/tinymce.min.js"
TINYMCE_COMPRESSOR = False